name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  actions: read
  security-events: write

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        # Try npm ci first, fallback to npm install if package-lock.json issues
        npm ci || npm install
      
    - name: Run security audit
      run: npm audit --audit-level=moderate || echo "Audit completed with findings"
      
    - name: Check for outdated dependencies
      run: npm outdated || true
      
    - name: Run dependency check
      run: |
        echo "Checking for known vulnerabilities in dependencies..."
        npx audit-ci --moderate || echo "Vulnerability check completed"
        
  lint-and-format:
    name: Code Quality & Browser Compatibility
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        # Try npm ci first, fallback to npm install if package-lock.json issues
        npm ci || npm install
      
    - name: Run JavaScript compatibility analysis
      run: npm run lint
      
    - name: Check browser compatibility targets
      run: npx browserslist
      
    - name: Validate HTML structure
      run: |
        echo "Validating HTML structure..."
        # Basic HTML validation
        if command -v tidy &> /dev/null; then
          tidy -q -e index.html || echo "HTML validation completed"
        else
          echo "HTML Tidy not available, skipping validation"
        fi
        
    - name: Install system dependencies for Puppeteer
      run: |
        sudo apt-get update
        # Install core Puppeteer dependencies
        sudo apt-get install -y \
          libnss3-dev \
          libatk-bridge2.0-dev \
          libdrm2 \
          libxkbcommon0 \
          libgbm1 \
          libxss1 \
          libxrandr2 \
          libpangocairo-1.0-0 \
          libatk1.0-0 \
          libcairo-gobject2 \
          libgtk-3-0 \
          libgdk-pixbuf2.0-0 \
          fonts-liberation \
          libappindicator3-1 \
          libu2f-udev \
          xdg-utils
        
        # Install audio dependencies with fallback
        sudo apt-get install -y libasound2 || sudo apt-get install -y libasound2-dev || echo "Audio packages not available"
        
        # Try to install optional dependencies
        sudo apt-get install -y libgconf-2-4 || echo "libgconf-2-4 not available (optional)"
          
    - name: Run browser compatibility tests
      run: npm run test:browser-compat
      
    - name: Upload browser test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: browser-compatibility-results
        path: tests/reports/
        retention-days: 30
        
  deployment-preview:
    name: Deployment Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        # Try npm ci first, fallback to npm install if package-lock.json issues
        npm ci || npm install
      
    - name: Start test server
      run: |
        npm run serve &
        sleep 5
        
    - name: Test deployment
      run: |
        curl -f http://localhost:3000 > /dev/null
        echo "âœ… Deployment preview accessible"
        
    - name: Generate deployment artifact
      run: |
        mkdir -p deployment-preview
        cp index.html deployment-preview/
        cp README.md deployment-preview/
        echo "Preview generated at $(date)" > deployment-preview/build-info.txt
        
    - name: Upload deployment preview
      uses: actions/upload-artifact@v4
      with:
        name: deployment-preview
        path: deployment-preview/
        retention-days: 7